# This workflow will run unit tests

name: Run Unit Tests
on:
  push:
  workflow_dispatch:

jobs:
  build_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install Build Tools
        run: |
          python -m pip install build wheel
      - name: Build Distribution Packages
        run: |
          python setup.py bdist_wheel
  service_api_tests:
    strategy:
      matrix:
        python-version: [ 3.6, 3.7, 3.8, 3.9 ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/requirements.txt
          pip install -r requirements/test_requirements.txt
      - name: Export credentials
        run: |
          mkdir -p ~/.local/share/neon
          echo ${WOLFRAM_ID} > ~/.local/share/neon/wolfram.txt
          echo ${AV_API_KEY} > ~/.local/share/neon/alpha_vantage.txt
          echo ${OWM_KEY} > ~/.local/share/neon/owm.txt
        env:
          WOLFRAM_ID: ${{secrets.wolfram_id}}
          AV_API_KEY: ${{secrets.alpha_vantage_key}}
          OWM_KEY: ${{secrets.open_weather_map_key}}
      - name: Test Service APIs
        run: |
          pytest tests/service_api_tests.py --doctest-modules --junitxml=tests/service-api-test-results.xml
      - name: Upload service API test results
        uses: actions/upload-artifact@v2
        with:
          name: service-api-test-results
          path: tests/service-api-test-results.xml
  skill_object_tests:
    strategy:
      matrix:
        python-version: [ 3.6, 3.7, 3.8, 3.9 ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Sound Library
        run: sudo apt-get install libsndfile1
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          sudo apt install gcc libfann-dev
          pip install -r requirements/requirements.txt
          pip install -r requirements/test_requirements.txt

      - name: Test Skills Objects
        run: |
          pytest tests/neon_skill_tests.py --doctest-modules --junitxml=tests/skill-object-test-results.xml
      - name: Upload skill test results
        uses: actions/upload-artifact@v2
        with:
          name: skill-test-results
          path: tests/skill-object-test-results.xml
  unit_tests:
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
    runs-on: ubuntu-latest
    steps:
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/requirements.txt

      - name: Test Bus API
        run: |
          pytest tests/test_bus_api.py --doctest-modules --junitxml=tests/bus-api-test-results.xml
      - name: Upload skill patch test results
        uses: actions/upload-artifact@v2
        with:
          name: bus-api-test-results
          path: tests/bus-api-test-results.xml

      - name: Test Config
        run: |
          pytest tests/test_config.py --doctest-modules --junitxml=tests/config-test-results.xml
      - name: Upload config test results
        uses: actions/upload-artifact@v2
        with:
          name: config-test-results
          path: tests/config-test-results.xml

      - name: Test Constants
        run: |
          pytest tests/test_constants.py --doctest-modules --junitxml=tests/constants-test-results.xml
      - name: Upload constants test results
        uses: actions/upload-artifact@v2
        with:
          name: constants-test-results
          path: tests/constants-test-results.xml

      - name: Test Core Commands
        run: |
          pytest tests/test_core_commands.py --doctest-modules --junitxml=tests/core-commands-test-results.xml
      - name: Upload core commands test results
        uses: actions/upload-artifact@v2
        with:
          name: core-commands-test-results
          path: tests/core-commands-test-results.xml

      - name: Test Messagebus
        run: |
          pytest tests/test_messagebus.py --doctest-modules --junitxml=tests/messagebus-test-results.xml
      - name: Upload messagebus test results
        uses: actions/upload-artifact@v2
        with:
          name: messagebus-test-results
          path: tests/messagebus-test-results.xml
